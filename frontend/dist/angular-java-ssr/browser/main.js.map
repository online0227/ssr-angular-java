{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.constants.ts","./src/app/app.module.ts","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/index/index.component.ts","./src/app/index/index.component.html","./src/app/list-todos/list-todos.component.ts","./src/app/list-todos/list-todos.component.html","./src/app/logout/logout.component.ts","./src/app/logout/logout.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/shared/services/auth/route-guard.service.ts","./src/app/shared/services/common/data-sharing-service.service.ts","./src/app/shared/services/http/http-intercepter-basic-auth.service.ts","./src/app/shared/services/rest/todo-data.service.ts","./src/app/shared/services/rest/welcome-data.service.ts","./src/app/shared/storage/universal.storage.ts","./src/app/todo/todo.component.ts","./src/app/todo/todo.component.html","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RouteGuardService } from '@shared/services/auth/route-guard.service';\n\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { LoginComponent } from './login/login.component';\nimport { ListTodosComponent } from './list-todos/list-todos.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { TodoComponent } from './todo/todo.component';\nimport { ErrorComponent } from './error/error.component';\nimport { IndexComponent } from './index/index.component';\nconst routes: Routes = [\n  { path: '', component: IndexComponent  },\n  { path: 'signup', loadChildren: () => import('./signup/signup.module').then(m => m.SignupModule) },\n  { path: 'login', loadChildren: () => import('./login/login.module').then(m => m.LoginModule) },  { path: 'welcome/:name', component: WelcomeComponent, canActivate:[RouteGuardService]},\n  { path: 'todos', component: ListTodosComponent, canActivate:[RouteGuardService] },\n  { path: 'logout', component: LogoutComponent, canActivate:[RouteGuardService] },\n  { path: 'todos/:id', component: TodoComponent, canActivate:[RouteGuardService] },\n\n  { path: '**', component: ErrorComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    initialNavigation: 'enabled'\n})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router, RouterEvent, NavigationStart, NavigationEnd } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular-java-ssr';}\n","<!--<app-welcome></app-welcome>-->\n\n<!-- <app-login></app-login> -->\n<!--\n<div>Component Content</div>-->\n\n<app-menu></app-menu>\n\n<div class=\"container\">\n    <router-outlet>\n        <!-- <span class=\"loader\" *ngIf=\"loading\">Loading...</span> -->\n    </router-outlet>\n</div>\n\n<app-footer></app-footer>","export const CLIENT_ADDRESS = \"http://localhost:4200\"\nexport const SERVER_ADDRESS = \"http://localhost:5000\"\nexport const DOMAIN = \"localhost:5000\"\nexport const SSL = false;// export const SSL = false; // currently SSL isn't yet supported from java backend, so set it always false.","import { HttpIntercepterBasicAuthService } from '@shared/services/http/http-intercepter-basic-auth.service';\nimport { DataSharingServiceService } from '@shared/services/common/data-sharing-service.service';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';import { CookieModule } from '@gorniv/ngx-universal';\nimport { UniversalStorage } from '@shared/storage/universal.storage';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { MenuComponent } from './menu/menu.component';import { ListTodosComponent } from './list-todos/list-todos.component';\nimport { TodoComponent } from './todo/todo.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { ErrorComponent } from './error/error.component';\nimport { IndexComponent } from './index/index.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n    FooterComponent,\n    MenuComponent,    ListTodosComponent,\n    TodoComponent,\n    LogoutComponent,\n    ErrorComponent,\n    IndexComponent,  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    CookieModule.forRoot()\n  ],\n  providers: [\n    DataSharingServiceService,\n    UniversalStorage,\n    {provide: HTTP_INTERCEPTORS, useClass: HttpIntercepterBasicAuthService, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n\n  errorMessage = 'An Error Occured! Contact Support at *** - ***'\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","{{errorMessage}}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<footer class=\"footer\">\n    <div class=\"container\">\n        <span class=\"text-light\">@Powered By Angular Frontend & Java Backend</span>\n    </div>\n\n</footer>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.scss']\n})\nexport class IndexComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<br />\n<h2>What this app does:</h2>\n<p>- Angular Frontend</p>\n<p>- Java Backend (Spring Boot, Spring Security, Rest)</p>\n<p>- Server-side Rendering</p>\n<p>- Code-splitting</p>\n<p>- Multi-domain Support</p>\n<p>- JWT Authentication</p>\n<p>- MySQL</p>\n<p>- Todo Management after the registration</p>","import { TodoDataService } from '@shared/services/rest/todo-data.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { UniversalStorage } from '@shared/storage/universal.storage';\n\nexport class Todo {\n  constructor(\n    public id: number,\n    public description: string,\n    public done: boolean,\n    public targetDate: Date\n  ) {\n\n  }\n}\n\n@Component({\n  selector: 'app-list-todos',\n  templateUrl: './list-todos.component.html',\n  styleUrls: ['./list-todos.component.scss']\n})\nexport class ListTodosComponent implements OnInit {\n\n  todos: Todo[]\n  message: string\n  username: string\n\n  constructor(\n    private todoService: TodoDataService,\n    private router: Router,\n    private _universalStorage: UniversalStorage  ) {\n\n  }\n\n  ngOnInit() {\n    this.username = this._universalStorage.getItem('authenticaterUser')\n    this.refreshTodos();\n  }\n\n  refreshTodos() {    this.todoService.retrieveAllTodos().subscribe(\n      response => {\n        this.todos = response;\n      }\n    )\n  }\n\n  deleteTodo(id) {\n    this.todoService.deleteTodo(this.username, id).subscribe(\n      response => {\n        this.message = `Delete of Todo ${id} Successful!`;\n        this.refreshTodos();\n      }\n    )\n  }\n\n  updateTodo(id) {\n    this.router.navigate(['todos', id])  }\n\n  addTodo() {\n    this.router.navigate(['todos', -1])\n  }\n}\n","<h1> Todo </h1>\n<!-- *ngIf='message' means that if message exists, show message -->\n<div class=\"alert alert-success\" *ngIf='message'>{{message}}</div>\n\n<div class=\"container\">\n  <table class=\"table\">\n    <thead>\n      <tr>\n        <th>Description</th>\n        <th>Target Date</th>\n        <th>is Completed?</th>\n        <th>Update</th>\n        <th>Delete</th>\n      </tr>\n    </thead>\n    <tbody>\n      <!--   for (Todo todo: todos) {  -->\n              <tr *ngFor=\"let todo of todos\">\n                <td>{{todo.description}}</td>\n                <td>{{todo.targetDate | date | uppercase}}</td>\n                <td>{{todo.done}}</td>\n                <td><button (click)=\"updateTodo(todo.id)\" class=\"btn btn-success\">Update</button></td>\n                <td><button (click)=\"deleteTodo(todo.id)\" class=\"btn btn-warning\">Delete</button></td>\n              </tr>\n      <!-- } -->\n    </tbody>\n\n  </table>\n\n  <div class=\"row\">\n      <button (click)=\"addTodo()\" class=\"btn btn-success\">Add</button>\n  </div>\n\n</div>","import { DataSharingServiceService } from '@shared/services/common/data-sharing-service.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UniversalStorage } from '@shared/storage/universal.storage';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n    private dataSharingService: DataSharingServiceService,\n    private _universalStorage: UniversalStorage  ) { }\n\n  ngOnInit() {    this._universalStorage.removeItem('authenticaterUser');\n    this._universalStorage.removeItem('token');\n    this.dataSharingService.isUserLoggedIn.next(false);\n    this.router.navigate(['/']);\n  }\n\n}\n","<H1>You are logged out</H1>\n<div class=\"container\">\n  Thank You For Using Our Application.\n</div>","import { DataSharingServiceService } from '@shared/services/common/data-sharing-service.service';\nimport { Component, OnInit } from '@angular/core';\nimport { CLIENT_ADDRESS } from '../app.constants';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n  isUserLoggedIn: boolean;\n  username: string;\n  client_address: string;\n\n  constructor(\n    private dataSharingService: DataSharingServiceService\n  ) {    this.dataSharingService.isUserLoggedIn.subscribe(value => { \n      this.isUserLoggedIn = value;\n    });    this.dataSharingService.username.subscribe(value => {\n      this.username = value;\n    });\n  }\n\n  ngOnInit() {\n    this.client_address = CLIENT_ADDRESS;\n  }\n\n}\n","<header>\n    <nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n        <div><a href=\"{{client_address}}\" class=\"navbar-brand\">\n                Angular Frontend + Java Backend</a></div>\n\n        <ul class=\"navbar-nav\">\n            <li><a *ngIf=\"isUserLoggedIn\" routerLink=\"/welcome/{{username}}\" class=\"nav-link\">Home</a></li>\n            <li><a *ngIf=\"isUserLoggedIn\" routerLink=\"/todos\" class=\"nav-link\">Todos</a></li>\n        </ul>\n\n        <ul class=\"navbar-nav navbar-collapse justify-content-end\">\n            <li><a *ngIf=\"!isUserLoggedIn\" routerLink=\"/signup\" class=\"nav-link\">Signup</a></li>\n            <li><a *ngIf=\"!isUserLoggedIn\" routerLink=\"/login\" class=\"nav-link\">Signin</a></li>\n            <li><a *ngIf=\"isUserLoggedIn\" routerLink=\"/logout\" class=\"nav-link\">Singout</a></li>\n        </ul>\n    </nav>\n</header>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { DataSharingServiceService } from '@shared/services/common/data-sharing-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService implements CanActivate {\n\n  constructor(\n    private router: Router,\n    private dataSharingService: DataSharingServiceService\n    ) {\n\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n\n    if (this.dataSharingService.isUserLoggedIn.value)\n      return true;\n\n    this.router.navigate(['login']);\n\n    return false;\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { UniversalStorage } from '@shared/storage/universal.storage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataSharingServiceService {\n  public isUserLoggedIn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  public username: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n  public token: BehaviorSubject<string> = new BehaviorSubject<string>(\"\");\n  constructor(\n    @Inject(UniversalStorage) private _appStorage: Storage,\n  ) {    this.username.next(this._appStorage.getItem('authenticaterUser'));\n    this.token.next(this._appStorage.getItem('token'));\n    if (!!this.username.value && !!this.token.value) {\n      this.isUserLoggedIn.next(true);\n    } else {\n      this.isUserLoggedIn.next(false);\n    }\n  }\n}\n","import { DataSharingServiceService } from '@shared/services/common/data-sharing-service.service';\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { SSL, DOMAIN } from \"../../../app.constants\"\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpIntercepterBasicAuthService implements HttpInterceptor {\n  constructor(\n    private dataSharingService: DataSharingServiceService\n  ) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\n    let authHeaderString = this.dataSharingService.token.value;\n    let username = this.dataSharingService.username.value;\n\n    let path = (SSL ? \"https://\" : \"http://\") + (username ? `${username}.` : \"www.\") + DOMAIN + request.url;\n\n    if (authHeaderString && username) {\n      request = request.clone({\n        url: path,\n        setHeaders: {\n          Authorization: authHeaderString,\n        }\n      })\n\n    } else {\n      request = request.clone({\n        url: path,\n      })\n    }\n    return next.handle(request);\n  }\n\n\n}\n","import { SERVER_ADDRESS } from '../../../app.constants';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Todo } from '../../../list-todos/list-todos.component';\nimport { UniversalStorage } from '@shared/storage/universal.storage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoDataService {\n  private token: any;\n\n  constructor(\n    private http: HttpClient,\n    @Inject(UniversalStorage) private _appStorage: Storage,\n  ) { \n    this.token = this._appStorage.getItem('token');\n  }\n\n  retrieveAllTodos() {    return this.http.get<Todo[]>(`/jpa/users/todos`);  }\n  deleteTodo(usernameOrEmail, id) {\n    return this.http.delete(`/jpa/users/${usernameOrEmail}/todos/${id}`);\n  }\n\n  retrieveTodo(usernameOrEmail, id) {    return this.http.get<Todo>(`/jpa/users/${usernameOrEmail}/todos/${id}`);\n  }\n\n  updateTodo(usernameOrEmail, id, todo) {\n    return this.http.put(\n      `/jpa/users/${usernameOrEmail}/todos/${id}`\n      , todo);\n  }\n\n  createTodo(usernameOrEmail, todo) {\n    return this.http.post(\n      `/jpa/users/${usernameOrEmail}/todos`\n      , todo);\n  }\n\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nexport class HelloWorldBean {\n  constructor(public message: string) { }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WelcomeDataService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n  executeHelloWorldServiceWithPathVariable(name) {\n    return this.http.get<HelloWorldBean>(\n      `/hello-world/path-variable/${name}`,    );  }}\n","import { Injectable } from '@angular/core';\nimport { CookieService } from '@gorniv/ngx-universal';\n\n@Injectable()\nexport class UniversalStorage implements Storage {\n  [index: number]: string;\n  [key: string]: any;\n  length: number;\n  cookies: any;\n\n  constructor(private cookieService: CookieService) {}\n\n  public clear(): void {\n    this.cookieService.removeAll();\n  }\n\n  public getAll(): Object {\n    return this.cookieService.getAll();\n  }\n\n  public getItem(key: string): string {\n    return this.cookieService.get(key);\n  }\n\n  public key(index: number): string {\n    return this.cookieService.getAll().propertyIsEnumerable[index];\n  }\n\n  public removeItem(key: string): void {\n    this.cookieService.remove(key);\n  }\n\n  public setItem(key: string, data: string): void {\n    this.cookieService.put(key, data);\n  }\n}\n","import { ActivatedRoute, Router } from '@angular/router';\nimport { TodoDataService } from '@shared/services/rest/todo-data.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Todo } from '../list-todos/list-todos.component';\nimport { UniversalStorage } from '@shared/storage/universal.storage';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.scss']\n})\nexport class TodoComponent implements OnInit {\n\n  id:number\n  todo: Todo\n  private username: string\n\n  constructor(\n    private todoService: TodoDataService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private _universalStorage: UniversalStorage\n  ) { }\n\n  ngOnInit() {\n    \n    this.id = this.route.snapshot.params['id'];\n    \n    this.todo = new Todo(this.id,'',false,new Date());\n\n    this.username = this._universalStorage.getItem('authenticaterUser')\n    \n    if(this.id!=-1) {\n      this.todoService.retrieveTodo(this.username, this.id)\n          .subscribe (\n            data => this.todo = data\n          )\n    }\n  }\n\n  saveTodo() {\n    if(this.id == -1) {      this.todoService.createTodo(this.username, this.todo)\n          .subscribe (\n            data => {              this.router.navigate(['todos'])\n            }\n          )\n    } else {\n      this.todoService.updateTodo(this.username, this.id, this.todo)\n          .subscribe (\n            data => {              this.router.navigate(['todos'])\n            }\n          )\n    }\n  }\n\n}\n","<H1>Todo</H1>\n\n<div class=\"container\">\n  <div class=\"alert alert-warning\" *ngIf=\"todoForm.dirty && todoForm.invalid\">Enter valid values</div>\n  <div class=\"alert alert-warning\" *ngIf=\"todoForm.dirty && targetDate.invalid\">Enter valid Target Date</div>\n  <div class=\"alert alert-warning\" *ngIf=\"todoForm.dirty && description.invalid\">Enter atleast 5 characters in Description</div>\n  \n  <form (ngSubmit)=\"!todoForm.invalid && saveTodo()\" #todoForm=\"ngForm\">\n    <fieldset class=\"form-group\">\n      <label>Description</label>\n      <!-- todo.description 이 있으면 바인드 -->\n      <input type=\"text\" #description=\"ngModel\" \n            [(ngModel)]=\"todo.description\" class=\"form-control\" \n                name=\"description\" required=\"required\" minlength=\"5\">\n    </fieldset>\n\n    <!-- [ngModel] 은 property binding, (ngModelChange) 은 이벤트 바인딩 이라고 한다. whenever there is change in target date value, then\n    set the target date to whatever value returned by the event. |의 이후에 있는 것은 |의 전자에 있는 date 를 표기하는 방식을 지정 -->\n    <fieldset class=\"form-group\">\n        <label>Target Date</label>\n        <input type=\"date\" #targetDate=\"ngModel\"\n        [ngModel]=\"todo.targetDate | date:'yyyy-MM-dd' \"\n        (ngModelChange)=\"todo.targetDate = $event\"\n        class=\"form-control\" name=\"targetDate\" required=\"required\" >\n    </fieldset>\n\n    <button type=\"submit\" class=\"btn btn-success\">Save</button>\n  </form>  \n</div>","import { WelcomeDataService } from '@shared/services/rest/welcome-data.service';\nimport { ActivatedRoute } from '@angular/router'; import { Component, OnInit } from '@angular/core';//'./app.component';\nimport { UniversalStorage } from '@shared/storage/universal.storage'; @Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss']\n}) export class WelcomeComponent implements OnInit {\n\n  message = 'Some Welcome Message'\n  welcomeMessageFromService: string\n  name = '';\n  constructor(\n    private route: ActivatedRoute,\n    private service: WelcomeDataService,\n    private _universalStorage: UniversalStorage,\n  ) {\n  } ngOnInit() {\n    this.name = this.route.snapshot.params['name'];\n  }\n  getWelcomeMessageWithParameter() {\n    this.service.executeHelloWorldServiceWithPathVariable(this.name).subscribe(\n      response => this.handleSuccessfulResponse(response),\n      error => this.handleErrorResponse(error)\n    );\n  }\n\n\n  handleSuccessfulResponse(response) { this.welcomeMessageFromService = response.message }\n\n  handleErrorResponse(error) {\n    this.welcomeMessageFromService = error.error.message\n  }\n}\n\nexport class Class1 {\n\n}\n\nexport class Class2 {\n\n}","<H1>Welcome!</H1>\n\n<div class=\"container\">\n  Welcome {{name}}. You can manage your todos <a routerLink=\"/todos\">here</a>\n</div>","\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n});\n"],"sourceRoot":"webpack:///"}