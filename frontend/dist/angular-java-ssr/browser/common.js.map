{"version":3,"sources":["./src/app/shared/services/rest/authentication.service.ts"],"names":[],"mappings":";;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACP;AACP;AAEgC;;;;AAK9D,MAAM,qBAAqB;IAEhC,YAC+B,UAAkB,EACrC,IAAgB,EACQ,WAAoB,EAAa,MAAc;QAFpD,eAAU,GAAV,UAAU,CAAQ;QACrC,SAAI,GAAJ,IAAI,CAAY;QACQ,gBAAW,GAAX,WAAW,CAAS;QAAa,WAAM,GAAN,MAAM,CAAQ;IAC/E,CAAC;IAEL,MAAM,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,kBAAkB,EAAE;YACpB,QAAQ,EAAE,QAAQ;YAClB,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE,QAAQ;SACnB,CAAC,CAAC,IAAI,CAAO,0DAAG,CACb,IAAI,CAAC,EAAE;YACL,OAAO,IAAI,CAAC;QACd,CAAC,CACF,CACF,CAAC;IACJ,CAAC;IAED,+BAA+B,CAAC,eAAe,EAAE,QAAQ;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,kBAAkB,EAAE;YACpB,eAAe,EAAE,eAAe;YAChC,QAAQ,EAAE,QAAQ;SACnB,CAAC,CAAC,IAAI,CAAO,0DAAG,CACb,IAAI,CAAC,EAAE;YACL,IAAI,IAAI,GAAG,EAAE,QAAQ,EAAG,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAG,UAAU,IAAI,CAAC,WAAW,EAAE,EAAE;YAC7E,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,mBAAmB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC7D,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9C,OAAO,IAAI,CAAC;QACd,CAAC,CACF,CACF,CAAC;IACJ,CAAC;;0FArCU,qBAAqB,yDAGtB,yDAAW,mLAEX,kFAAgB;wGALf,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM;6FAEP,qBAAqB;cAHjC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;sCAI4C,MAAM;sBAA9C,oDAAM;uBAAC,yDAAW;qGAE4B,OAAO;sBAArD,oDAAM;uBAAC,kFAAgB;;AAoCrB,MAAM,kBAAkB;IAC7B,YAAmB,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;IAAI,CAAC;CACxC","file":"common.js","sourcesContent":["import { SERVER_ADDRESS } from '../../../app.constants';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Injectable, Inject } from '@angular/core';\nimport { PLATFORM_ID } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { UniversalStorage } from '@shared/storage/universal.storage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    protected http: HttpClient,\n    @Inject(UniversalStorage) private _appStorage: Storage,    private router: Router\n  ) { }\n\n  signUp(username, email, name, password) {\n    return this.http.post<any>(\n      `/api/auth/signup`, {\n      username: username,\n      email: email,\n      name: name,\n      password: password\n    }).pipe(      map(\n        data => {\n          return data;\n        }\n      )\n    );\n  }\n\n  executeJWTAuthenticationService(usernameOrEmail, password) {\n    return this.http.post<any>(\n      `/api/auth/signin`, {\n      usernameOrEmail: usernameOrEmail,\n      password: password\n    }).pipe(      map(\n        data => {\n          let auth = { username : data.username, token : `Bearer ${data.accessToken}` }\n          this._appStorage.setItem('authenticaterUser', auth.username);\n          this._appStorage.setItem('token', auth.token);\n          return auth;\n        }\n      )\n    );\n  }\n\n}\n\nexport class AuthenticationBean {\n  constructor(public message: string) { }\n}"],"sourceRoot":"webpack:///"}